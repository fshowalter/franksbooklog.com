---
import type { Author } from "~/api/authors";

import { allAuthors } from "~/api/authors";
import AstroPageShell from "~/astro/AstroPageShell.astro";
import { getLayoutAvatarImageProps } from "~/components/layout/getLayoutAvatarImageProps";
import { getLayoutBackdropImageProps } from "~/components/layout/getLayoutBackdropImageProps";
import { Layout } from "~/components/layout/Layout";
import { AuthorTitles } from "~/features/author-titles/AuthorTitles";
import { getAuthorTitlesProps } from "~/features/author-titles/getAuthorTitlesProps";

type Props = Author;

export async function getStaticPaths() {
  const authors = await allAuthors();

  return authors.map((author) => {
    return {
      params: {
        slug: author.slug,
      },
      props: author,
    };
  });
}

const { name, reviewedWorks, slug } = Astro.props;
const authorTitlesProps = await getAuthorTitlesProps(slug);
const backdropImageProps = await getLayoutBackdropImageProps("author");
const avatarImageProps = await getLayoutAvatarImageProps(slug);

const reviewedWorkCount = reviewedWorks.length;

let works = "works";

if (reviewedWorkCount === 1) {
  works = "work";
}

const deck = `Author of ${reviewedWorkCount} reviewed ${works}.`;
const metaDescription = `Reviews of books and stories written by ${name}. Sort reviews by best or worst, newest or oldest. Filter by year, kind, or title.`;
---

<AstroPageShell
  canonical={true}
  meta={{
    description: metaDescription,
  }}
  openGraph={{
    description: deck,
    type: "website",
  }}
  title={`${name} book & story reviews`}
>
  <Layout
    backdrop={{
      avatarImageProps: avatarImageProps,
      backdropImageProps: backdropImageProps,
      breadcrumb: {
        href: "/authors/",
        text: "Authors",
      },
      deck,
      title: name,
    }}
    className="bg-subtle"
  >
    <AuthorTitles client:load {...authorTitlesProps} />
  </Layout>
</AstroPageShell>
